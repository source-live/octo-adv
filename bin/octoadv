#!/usr/bin/env python3
import sys
import argparse
import octoadv as oa

class CommandParser:                                               # EX: octoadv -f 
  def common(self,parser):
    parser.add_argument('dir',action='store',type=str,help='The directory Octo will train from.')
    self.common_flags(parser)
    
  def common_flags(self, parser):
    parser.add_argument('--format','-f',type=str,default='txt',help='TXT or OCTO')
    parser.add_argument('--add_symbols','-as',type=boolean,default='True',help='Define whether or not to add symbols from examples.',add_help=True)
    
  def get_parser(self):
    parser = argparse.ArgumentParser(description='Train, run, and deploy your ADVs', add_help=True)
    subparsers = parser.add_subparsers(dest='method')
    train_parser = subparsers.add_parser('train')
    build_parser = subparsers.add_parser('build')
    new_parser = subparsers.add_parser('new')
    self.common_flags(parser)
    self.common(build_parser)
    self.common(new_parser)
    
    return parser
    
parser = CommandParser().get_parser()
args = CommandParser().get_parser().parse_args()

class GetArgs:                                        # GetArgs('-as') will return True if command was octoadv -as True
  def __init__(n):
    if n == '-f':
      return args.format
    elif n == '-as':
      return args.add_symbols
      
  def Parser():
    return parser
    
